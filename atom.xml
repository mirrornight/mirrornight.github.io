<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>mirror night的博客</title>
  <subtitle>生命不止，折腾不止</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mirrornight.github.io/"/>
  <updated>2016-07-08T07:27:26.069Z</updated>
  <id>http://mirrornight.github.io/</id>
  
  <author>
    <name>mirror night</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>51单片机电子时钟</title>
    <link href="http://mirrornight.github.io/2016/07/08/51%E5%8D%95%E7%89%87%E6%9C%BA%E7%94%B5%E5%AD%90%E6%97%B6%E9%92%9F/"/>
    <id>http://mirrornight.github.io/2016/07/08/51单片机电子时钟/</id>
    <published>2016-07-08T07:04:44.000Z</published>
    <updated>2016-07-08T07:27:26.069Z</updated>
    
    <content type="html">&lt;p&gt;##protel设置&lt;br&gt;运行时报错是因为路径里有中文，环境变量配置问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;修改电脑的环境变量，右击【我的电脑】-&amp;gt;【属性】-&amp;gt;【高级】-&amp;gt;点击【环境变量】在用户变量栏里，找到TEMP与TMP，分别双击，将变量值都改为%SystemRoot%\TEMP。还有下面一栏的系统变量，同样改法。如果没有TEMP与TMP项，可以新建一下。 改好后，再仿真试试。&lt;/p&gt;
&lt;p&gt;##遇到的一些问题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;51单片机和lcd连接的时候一定要接排阻。&lt;/li&gt;
&lt;li&gt;EA（51单片机）在使用 片外 存储器时，需接低电平，直接接到GND。&lt;br&gt;如没有使用片外存储器，则必须接高电平，否则你的程序将不会执行&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&quot;c&quot;&gt;/*
51单片机制作的电子时钟

使用主要元件：
AT89C51单片机，LCD1602

功能：
显示时间，可用按键调节时间

控制方法：
S1按下进入时间设置模式，按钮调节指针位置，每次按下调到不同的位置
S2按钮进行时间加
S3按钮进行时间减
*/

#include &amp;lt;reg52.h&amp;gt;
#define uchar unsigned char
#define uint unsigned int
#define BUSY 0x80
sbit RS=P2^5;
sbit RW=P2^6;
sbit E=P2^7;

sbit s1=P3^0;
sbit s2=P3^1;
sbit s3=P3^2;

char shi,fen,miao;

uchar count,s1num;
uchar code table[]=&amp;quot;  2016-7-8 5&amp;quot;;
uchar code table1[]=&amp;quot;  00:00:00&amp;quot;;

void delay(uint z)  //延迟函数
{
    uint x,y;
    for(x=z;x&amp;gt;0;x--)
    {
        for(y=110;y&amp;gt;0;y--);
    }
}

void write_com(uchar com)  //写命令
{
    RS=0;
    RW=0;
    E=0;
    P0=com;
    delay(5);
    E=1;
    delay(5);
    E=0;
}

void write_date(uchar date) //写数据
{
    RS=1;
    RW=0;
    E=0;
    P0=date;
    delay(5);
    E=1;
    delay(5);
    E=0;
}

void init() //初始化
{
    uchar num;
    E=0;
//    shi=00;
//    fen=;
//    miao=40;
    write_com(0x38);  //显示模式设置
    write_com(0x0c);  //开显示，不显示光标，光标不闪烁
    write_com(0x06);  //当读或写一个字符后地址指针加一，且光标加一
    write_com(0x01);  //显示清屏
    write_com(0x80);  //设置数据地址指针
    for(num=0;num&amp;lt;12;num++)
    {
        write_date(table[num]); //将前面数组里的数写入
        delay(20);
    }
    write_com(0x80+0x40);
    for(num=0;num&amp;lt;10;num++)
    {
        write_date(table1[num]);
        delay(20);
    }
    TMOD=0x01;        //低四位设置定时器0工作在方式1
    TH0=(65536-50000)/256;
    TL0=(65536-50000)%256;//定时的时间
    EA=1;
    ET0=1;   //定时器0的中断允许
    TR0=1;   //定时器0的运行开关
}

void write_sfm(uchar add,uchar date)  //将时间写入lcd
{
    uchar shi,ge;
    shi=date/10;
    ge=date%10;
    write_com(0x80+0x40+add);
    write_date(0x30+shi);
    write_date(0x30+ge);
}

void timer0() interrupt 1   //中断程序
{
    TH0=(65536-50000)/256;
    TL0=(65536-50000)%256;
    count++;                //过50ms后记一次数
    if(count==20)           //过一秒后执行下面的程序
    {
        count=0;            //时钟自走程序
        miao++;
        if(miao==60)
        {
            miao=0;
            fen++;
            if(fen==60)
            {
                fen=0;
                shi++;
                if(shi==24)
                {
                    shi=0;
                }
                write_sfm(2,shi);
            }
            write_sfm(5,fen);
        }
        write_sfm(8,miao);
    }
}

void keyscan()   //开关调时间程序
{
    if(s1==0)
    {
        delay(5);//防抖延迟
        if(s1==0)
        {
            s1num++;
            while(!s1); //防抖检测    
            if(s1num==1)
            {
                TR0=0;  //定时器停止运行
                write_com(0x80+0x40+9);  //调整光标的位置到秒
                write_com(0x0f);         //显示光标
            }
            if(s1num==2)
            {
                write_com(0x80+0x40+6);  //调整光标的位置到分
            }
            if(s1num==3)
            {
                write_com(0x80+0x40+3);  //调整光标的位置到时
            }
            if(s1num==4)
            {
                s1num=0;
                write_com(0x0c);
                TR0=1;
            }
        }
    }
    if(s1num!=0)        //检测按键2，设置时间的按键：加
    {
        if(s2==0)     
        {
            delay(5);
            if(s2==0)
            {
                while(!s2);
                if(s1num==1)
                {
                    miao++;
                    if(miao==60)
                    {
                        miao=0;
                    }
                    write_sfm(8,miao);   //先进行时间加运算，此时指针会移动到秒数据的后一格
                    write_com(0x80+0x40+9);//调节指针的位置到秒的位置
                }
                if(s1num==2)
                {
                    fen++;
                    if(fen==60)
                    {
                        fen=0;
                    }
                    write_sfm(5,fen);
                    write_com(0x80+0x40+6);
                }
                if(s1num==3)
                {
                    shi++;
                    if(shi==24)
                    {
                        shi=0;
                    }
                    write_sfm(2,shi);
                    write_com(0x80+0x40+3);
                }
            }
        }
        if(s3==0)         //按键功能减
        {
            delay(5);
            if(s3==0)
            {
                while(!s3);
                if(s1num==1)
                {
                    miao--;
                    if(miao==-1)
                    {
                        miao=59;
                    }
                    write_sfm(8,miao);
                    write_com(0x80+0x40+9);
                }
                if(s1num==2)
                {
                    fen--;
                    if(fen==-1)
                    {
                        fen=59;
                    }
                    write_sfm(5,fen);
                    write_com(0x80+0x40+6);
                }
                if(s1num==3)
                {
                    shi--;
                    if(shi==-1)
                    {
                        shi=23;
                    }
                    write_sfm(2,shi);
                    write_com(0x80+0x40+3);
                }
            }
        }
    }
}
void main()
{
    init();
    while(1)
    {
        keyscan();
    }
}
&lt;/code&gt;&lt;/pre&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;##protel设置&lt;br&gt;运行时报错是因为路径里有中文，环境变量配置问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;修改电脑的环境变量，右击【我的电脑】-&amp;gt;【属性】-&amp;gt;【高级】-&amp;gt;点击【环境变量】在用户变量栏里，找到TEMP与TMP，分别双击，将变量值都改
    
    </summary>
    
      <category term="自动化" scheme="http://mirrornight.github.io/categories/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    
      <category term="单片机" scheme="http://mirrornight.github.io/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>daily</title>
    <link href="http://mirrornight.github.io/2016/06/24/daily/"/>
    <id>http://mirrornight.github.io/2016/06/24/daily/</id>
    <published>2016-06-24T09:04:55.000Z</published>
    <updated>2016-07-08T06:59:51.392Z</updated>
    
    <content type="html">&lt;p&gt;##2016/6/23&lt;br&gt;看完了反叛的鲁鲁修。&lt;/p&gt;
&lt;p&gt;##2016/7/8&lt;br&gt;攻壳机动队&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;##2016/6/23&lt;br&gt;看完了反叛的鲁鲁修。&lt;/p&gt;
&lt;p&gt;##2016/7/8&lt;br&gt;攻壳机动队&lt;/p&gt;

    
    </summary>
    
      <category term="daily" scheme="http://mirrornight.github.io/categories/daily/"/>
    
    
      <category term="daily" scheme="http://mirrornight.github.io/tags/daily/"/>
    
  </entry>
  
  <entry>
    <title>python类中的类变量和实例变量</title>
    <link href="http://mirrornight.github.io/2016/06/12/python%E7%B1%BB%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%8F%98%E9%87%8F%E5%92%8C%E5%AE%9E%E4%BE%8B%E5%8F%98%E9%87%8F/"/>
    <id>http://mirrornight.github.io/2016/06/12/python类中的类变量和实例变量/</id>
    <published>2016-06-12T09:01:31.000Z</published>
    <updated>2016-06-12T09:29:59.730Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;class aa:
      w = 10           # 类属性
      def __init__(self):
           self.x = 11
           self.y = 12
      def add(self):
           return self.x + self.y

a = aa()               # a是aa类的一个实例
print a.add()          # 23
# 下边两条指令各起何作用？结果是输出两个 20 么？还是两个13？还是？
aa.w = 20              # 改变类变量的值为20
a.w = 13               # 改变实例变量的值为13
print aa.w, a.w        # 20 ，13
# 程序继续增加如下，怎样理解这t和q呢？他们是___变量
a.t = 14               # 给实例添加属性
a.q = 15               
print a.t, a.q
# 程序继续增加如下，怎样理解这 m 和 n呢？他们是___变量
aa.m = 30              # 给类添加属性
aa.n = 40
print aa.m, aa.n

# 好了再来个提升吧
# 程序继续增加,下列三个print语句都能正确执行么？为何？
b = aa()
print b.x,b.y
print b.t,b.q          # 报错a和b是不同的实例
print b.m,b.n          # 和前面的aa.m,aa.n一样，实例变量访问类变量
&lt;/code&gt;&lt;/pre&gt;
</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code class=&quot;python&quot;&gt;class aa:
      w = 10           # 类属性
      def __init__(self):
           self.x = 11
           self.y = 12
   
    
    </summary>
    
      <category term="python学习中感到疑惑的部分" scheme="http://mirrornight.github.io/categories/python%E5%AD%A6%E4%B9%A0%E4%B8%AD%E6%84%9F%E5%88%B0%E7%96%91%E6%83%91%E7%9A%84%E9%83%A8%E5%88%86/"/>
    
    
      <category term="python" scheme="http://mirrornight.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>scrapy框架学习</title>
    <link href="http://mirrornight.github.io/2016/06/12/scrapy%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/"/>
    <id>http://mirrornight.github.io/2016/06/12/scrapy框架学习/</id>
    <published>2016-06-12T08:30:24.000Z</published>
    <updated>2016-06-12T11:43:54.886Z</updated>
    
    <content type="html">&lt;h2 id=&quot;体会&quot;&gt;&lt;a href=&quot;#体会&quot; class=&quot;headerlink&quot; title=&quot;体会&quot;&gt;&lt;/a&gt;体会&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;看到陌生的代码要从两方面去理解：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从整体上理解，不要纠结细节，弄清每个函数的作用&lt;/li&gt;
&lt;li&gt;从细节上去理解，哪个关键字没见过，这些函数的参数是什么，等..即语言的语法本身上去理解&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;# -*- coding: utf-8 -*-
from scrapy.selector import Selector
from scrapy.http import Request
from scrapy.contrib.spiders import CrawlSpider
from scrapy.contrib.loader import ItemLoader
from scrapy.contrib.linkextractors.sgml import SgmlLinkExtractor
from ..items import BbsdmozItem

class forumSpider(CrawlSpider):
    name = &amp;#39;bbsSpider&amp;#39;
    allow_domain = [&amp;#39;bbs.sjtu.edu.cn&amp;#39;]
    start_urls = [&amp;#39;https://bbs.sjtu.edu.cn/bbsall&amp;#39;]
    # 这里弄不清类变量和继承的关系了
    # 这里类变量和继承没关系，继承是出现在方法中的

    link_extractor = {
        &amp;#39;page&amp;#39;: SgmlLinkExtractor(allow=&amp;#39;/bbsdoc,board,\w+\.html$&amp;#39;),
        &amp;#39;page_down&amp;#39;: SgmlLinkExtractor(allow=&amp;#39;/bbsdoc,board,\w+,page,\d+\.html$&amp;#39;),
        &amp;#39;content&amp;#39;: SgmlLinkExtractor(allow=&amp;#39;/bbscon,board,\w+,file,M\.\d+\.A\.html$&amp;#39;),
    }
    # link_extractor是字典，这里SgmlLinkExtractor(allow=&amp;#39;/bbscon,board,\w+,file,M\.\d+\.A\.html$&amp;#39;)是对象。
    # 字典中的值可以取任何数据类型，但必须是不变的。
    _x_query = {
        &amp;#39;page_content&amp;#39;: &amp;#39;//pre/text()[2]&amp;#39;,
        &amp;#39;poster&amp;#39;: &amp;#39;//pre/a/text()&amp;#39;,
        &amp;#39;forum&amp;#39;: &amp;#39;//center/text()[2]&amp;#39;,
    }
    # 单下划线开头的变量代表保护变量，不能用于’from module import *’ 
    # 以单下划线开头的表示的是protected类型的变量。即保护类型只能允许其本身与子类进行访问。

    def parse(self, response):
        for link in self.link_extractor[&amp;#39;page&amp;#39;].extract_links(response):
            # 使用 extract_links(response)方法，获取匹配到的链接
            yield Request(url=link.url, callback=self.parse_page)
            #Request对象接受一个参数callback指定这个Request返回的网页内容的解析函数

    def parse_page(self, response):
        for link in self.link_extractor[&amp;#39;page_down&amp;#39;].extract_links(response):
            yield Request(url=link.url, callback=self.parse_page)

        for link in self.link_extractor[&amp;#39;content&amp;#39;].extract_links(response):
            yield Request(url=link.url, callback=self.parse_content)

    def parse_content(self, response):
        bbsItem_loader = ItemLoader(item=BbsdmozItem, response=response)
        url = str(response.url)
        bbsItem_loader.add_value(&amp;#39;url&amp;#39;, url)
        bbsItem_loader.add_xpath(&amp;#39;forum&amp;#39;, self._x_query[&amp;#39;forum&amp;#39;])
        bbsItem_loader.add_xpath(&amp;#39;poster&amp;#39;, self._x_query[&amp;#39;poster&amp;#39;])
        bbsItem_loader.add_xpath(&amp;#39;content&amp;#39;, self._x_query[&amp;#39;page_content&amp;#39;])

        return bbsItem_loader.load_item()
&lt;/code&gt;&lt;/pre&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;体会&quot;&gt;&lt;a href=&quot;#体会&quot; class=&quot;headerlink&quot; title=&quot;体会&quot;&gt;&lt;/a&gt;体会&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;看到陌生的代码要从两方面去理解：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从整体上理解，不要纠结细节，弄清每个函数的作用
    
    </summary>
    
      <category term="遇到的问题" scheme="http://mirrornight.github.io/categories/%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="python" scheme="http://mirrornight.github.io/tags/python/"/>
    
      <category term="scrapy" scheme="http://mirrornight.github.io/tags/scrapy/"/>
    
  </entry>
  
  <entry>
    <title>正确使用搜索引擎</title>
    <link href="http://mirrornight.github.io/2016/06/10/%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
    <id>http://mirrornight.github.io/2016/06/10/正确使用搜索引擎/</id>
    <published>2016-06-10T08:13:41.000Z</published>
    <updated>2016-06-12T11:23:49.625Z</updated>
    
    <content type="html">&lt;p&gt;2016/6/12&lt;/p&gt;
&lt;p&gt;今天搜索scrapy时发现的问题&lt;br&gt;因为看不懂官方文档，脑子里一团糟，开始瞎搜索，结果只是浪费了时间。&lt;br&gt;晚上的时候冷静下来发现了可以更换一下思路。&lt;br&gt;直接收scrap教程时，往往都是些较浅的内容而且内容大致相同并没有太大收获。但加了一些关键字之后就可以发现一些好文章了，例“scrapy callback”。再在包含关键字的文章里找到作者的其他关于scrapy的文章，看看对自己帮助应该很大的。&lt;/p&gt;
&lt;p&gt;scrapy的文章收录在火狐的‘博客中’&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;2016/6/12&lt;/p&gt;
&lt;p&gt;今天搜索scrapy时发现的问题&lt;br&gt;因为看不懂官方文档，脑子里一团糟，开始瞎搜索，结果只是浪费了时间。&lt;br&gt;晚上的时候冷静下来发现了可以更换一下思路。&lt;br&gt;直接收scrap教程时，往往都是些较浅的内容而且内容大致相同并没有太大收获。
    
    </summary>
    
      <category term="榨汁机" scheme="http://mirrornight.github.io/categories/%E6%A6%A8%E6%B1%81%E6%9C%BA/"/>
    
    
      <category term="google" scheme="http://mirrornight.github.io/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>xpath学习</title>
    <link href="http://mirrornight.github.io/2016/06/10/xpath%E5%AD%A6%E4%B9%A0/"/>
    <id>http://mirrornight.github.io/2016/06/10/xpath学习/</id>
    <published>2016-06-10T03:26:34.000Z</published>
    <updated>2016-06-10T07:38:17.516Z</updated>
    
    <content type="html">&lt;p&gt;scrapy中只能用相对xpath&lt;/p&gt;
&lt;h2 id=&quot;XPath&quot;&gt;&lt;a href=&quot;#XPath&quot; class=&quot;headerlink&quot; title=&quot;XPath&quot;&gt;&lt;/a&gt;XPath&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;XPath 是一门在XML文档中查找信息的语言。XPath可用来在XML文档中对元素和属性进行便利&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;xml&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;ISO-8859-1&amp;quot;?&amp;gt;

&amp;lt;bookstore&amp;gt;                                --文档节点或根节点

&amp;lt;book&amp;gt;
  &amp;lt;title lang=&amp;quot;en&amp;quot;&amp;gt;Harry Potter&amp;lt;/title&amp;gt;    --元素节点和属性节点和基本值
  &amp;lt;author&amp;gt;J K. Rowling&amp;lt;/author&amp;gt;          
  &amp;lt;year&amp;gt;2005&amp;lt;/year&amp;gt;
  &amp;lt;price&amp;gt;29.99&amp;lt;/price&amp;gt;
&amp;lt;/book&amp;gt;

&amp;lt;/bookstore&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;在 XPath 中，有七种类型的节点：元素、属性、文本、命名空间、处理指令、注释以及文档（根）节点。&lt;/li&gt;
&lt;li&gt;XPath 使用路径表达式来选取 XML 文档中的节点或节点集。节点是通过沿着路径 (path) 或者步 (steps) 来选取的。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;    __选择节点__
    bookstore         
    /bookstore        
    bookstore/book
    //book               book下所有内容
    bookstore//book
    //@lang              所有名为lang的基本值

    __谓语__
    /bookstore/book[1]
    /bookstore/book[last()]
    /bookstore/book[last()-1]
    /bookstore/book[position()&amp;lt;3]
    //title[@lang]       选取所有节点属性为lang下的title的所有内容

    __选取未知节点__
    //*                  选取所有内容
    //title[@*]          选取所有带有属性的title下的内容

    __选取若干路径__
    //book/title | //book/price
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;scrapy中只能用相对xpath&lt;/p&gt;
&lt;h2 id=&quot;XPath&quot;&gt;&lt;a href=&quot;#XPath&quot; class=&quot;headerlink&quot; title=&quot;XPath&quot;&gt;&lt;/a&gt;XPath&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;XPath 是一门在XML文档中查找信息的语言。X
    
    </summary>
    
    
      <category term="python" scheme="http://mirrornight.github.io/tags/python/"/>
    
      <category term="scrapy" scheme="http://mirrornight.github.io/tags/scrapy/"/>
    
      <category term="xpath" scheme="http://mirrornight.github.io/tags/xpath/"/>
    
  </entry>
  
  <entry>
    <title>python学习时遇到的问题</title>
    <link href="http://mirrornight.github.io/2016/06/10/python%E5%AD%A6%E4%B9%A0%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://mirrornight.github.io/2016/06/10/python学习时遇到的问题/</id>
    <published>2016-06-10T01:21:20.000Z</published>
    <updated>2016-06-10T01:31:49.305Z</updated>
    
    <content type="html">&lt;h2 id=&quot;在一个项目中引用上级目录的模块&quot;&gt;&lt;a href=&quot;#在一个项目中引用上级目录的模块&quot; class=&quot;headerlink&quot; title=&quot;在一个项目中引用上级目录的模块&quot;&gt;&lt;/a&gt;在一个项目中引用上级目录的模块&lt;/h2&gt;&lt;p&gt;学习scrapy时遇到了这个问题，头疼了半天&lt;br&gt;解决方法:使用相对导入&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;from ..items import DmozItem&lt;br&gt;其中第一个点表示当前目录，第二个表示上一级父目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0328/#guido-s-decision&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PEP 0328 – Imports: Multi-Line and Absolute/Relative&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在一个项目中引用上级目录的模块&quot;&gt;&lt;a href=&quot;#在一个项目中引用上级目录的模块&quot; class=&quot;headerlink&quot; title=&quot;在一个项目中引用上级目录的模块&quot;&gt;&lt;/a&gt;在一个项目中引用上级目录的模块&lt;/h2&gt;&lt;p&gt;学习scrapy时遇到了这个问题，头
    
    </summary>
    
      <category term="遇到的问题" scheme="http://mirrornight.github.io/categories/%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="python" scheme="http://mirrornight.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>vimium命令</title>
    <link href="http://mirrornight.github.io/2016/06/06/vimium%E5%91%BD%E4%BB%A4/"/>
    <id>http://mirrornight.github.io/2016/06/06/vimium命令/</id>
    <published>2016-06-06T09:17:26.000Z</published>
    <updated>2016-06-06T10:37:15.033Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Vimium-The-Hacker’s-Browser&quot;&gt;&lt;a href=&quot;#Vimium-The-Hacker’s-Browser&quot; class=&quot;headerlink&quot; title=&quot;Vimium - The Hacker’s Browser&quot;&gt;&lt;/a&gt;Vimium - The Hacker’s Browser&lt;/h1&gt;&lt;h2 id=&quot;Keyboard-Bindings&quot;&gt;&lt;a href=&quot;#Keyboard-Bindings&quot; class=&quot;headerlink&quot; title=&quot;Keyboard Bindings&quot;&gt;&lt;/a&gt;Keyboard Bindings&lt;/h2&gt;&lt;p&gt;Modifier keys are specified as &lt;code&gt;&amp;lt;c-x&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;m-x&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;a-x&amp;gt;&lt;/code&gt; for ctrl+x, meta+x, and alt+x&lt;br&gt;respectively. See the next section for how to customize these bindings.&lt;/p&gt;
&lt;p&gt;Once you have Vimium installed, you can see this list of key bindings at any time by typing &lt;code&gt;?&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Navigating the current page:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;?       show the help dialog for a list of all available keys                         查看帮助文档
h       scroll left                                                                   左移
j       scroll down                                                                   下移
k       scroll up                                                                     上移
l       scroll right    ------------------------------------------------------------- 右移
gg      scroll to top of the page                                                     返回顶部
G       scroll to bottom of the page                                                  返回底部
d       scroll down half a page                                                       向下翻滚半个页面
u       scroll up half a page                                                         向上翻滚半个页面
f       open a link in the current tab  --------------------------------------------- 显示页面上的链接，打开链接在此页面
F       open a link in a new tab                                                      显示页面上的链接，打开链接在新的页面                                      
r       reload                                                                        刷新
gs      view source                                                                   显示源文件
i       enter insert mode -- all commands will be ignored until you hit Esc to exit   
yy      copy the current url to the clipboard
yf      copy a link url to the clipboard
gf      cycle forward to the next frame
gF      focus the main/top frame
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Navigating to new pages:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;o       Open URL, bookmark, or history entry
O       Open URL, bookmark, history entry in a new tab
b       Open bookmark
B       Open bookmark in a new tab
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Using find:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/       enter find mode
          -- type your search query and hit enter to search, or Esc to cancel
n       cycle forward to the next find match
N       cycle backward to the previous find match
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For advanced usage, see &lt;a href=&quot;https://github.com/philc/vimium/wiki/Find-Mode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;regular expressions&lt;/a&gt; on the wiki.&lt;/p&gt;
&lt;p&gt;Navigating your history:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;H       go back in history
L       go forward in history
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Manipulating tabs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;J, gT   go one tab left
K, gt   go one tab right
g0      go to the first tab
g$      go to the last tab
^       visit the previously-visited tab
t       create tab
yt      duplicate current tab
x       close current tab
X       restore closed tab (i.e. unwind the &amp;#39;x&amp;#39; command)
T       search through your open tabs
&amp;lt;a-p&amp;gt;   pin/unpin current tab
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Using marks:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ma, mA  set local mark &amp;quot;a&amp;quot; (global mark &amp;quot;A&amp;quot;)
`a, `A  jump to local mark &amp;quot;a&amp;quot; (global mark &amp;quot;A&amp;quot;)
``      jump back to the position before the previous jump
          -- that is, before the previous gg, G, n, N, / or `a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Additional advanced browsing commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;]], [[  Follow the link labeled &amp;#39;next&amp;#39; or &amp;#39;&amp;gt;&amp;#39; (&amp;#39;previous&amp;#39; or &amp;#39;&amp;lt;&amp;#39;)
          - helpful for browsing paginated sites
&amp;lt;a-f&amp;gt;   open multiple links in a new tab
gi      focus the first (or n-th) text input box on the page
gu      go up one level in the URL hierarchy
gU      go up to root of the URL hierarchy
zH      scroll all the way left
zL      scroll all the way right
v       enter visual mode; use p/P to paste-and-go, use y to yank
V       enter visual line mode
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Vimium supports command repetition so, for example, hitting &lt;code&gt;5t&lt;/code&gt; will open 5 tabs in rapid succession. &lt;code&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt; (or&lt;br&gt;&lt;code&gt;&amp;lt;c-[&amp;gt;&lt;/code&gt;) will clear any partial commands in the queue and will also exit insert and find modes.&lt;/p&gt;
&lt;p&gt;There are some advanced commands which aren’t documented here; refer to the help dialog (type &lt;code&gt;?&lt;/code&gt;) for a full&lt;br&gt;list.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Vimium-The-Hacker’s-Browser&quot;&gt;&lt;a href=&quot;#Vimium-The-Hacker’s-Browser&quot; class=&quot;headerlink&quot; title=&quot;Vimium - The Hacker’s Browser&quot;&gt;&lt;/a&gt;Vim
    
    </summary>
    
      <category term="命令参考手册" scheme="http://mirrornight.github.io/categories/%E5%91%BD%E4%BB%A4%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="vimium" scheme="http://mirrornight.github.io/tags/vimium/"/>
    
  </entry>
  
  <entry>
    <title>sumline常用命令</title>
    <link href="http://mirrornight.github.io/2016/06/06/sumline%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://mirrornight.github.io/2016/06/06/sumline常用命令/</id>
    <published>2016-06-06T06:14:17.000Z</published>
    <updated>2016-06-06T08:11:16.229Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="命令参考手册" scheme="http://mirrornight.github.io/categories/%E5%91%BD%E4%BB%A4%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="sumline text" scheme="http://mirrornight.github.io/tags/sumline-text/"/>
    
  </entry>
  
  <entry>
    <title>vim命令</title>
    <link href="http://mirrornight.github.io/2016/06/05/vim%E5%91%BD%E4%BB%A4/"/>
    <id>http://mirrornight.github.io/2016/06/05/vim命令/</id>
    <published>2016-06-05T00:47:22.000Z</published>
    <updated>2016-06-08T03:38:38.822Z</updated>
    
    <content type="html">&lt;h2 id=&quot;2016-6-5&quot;&gt;&lt;a href=&quot;#2016-6-5&quot; class=&quot;headerlink&quot; title=&quot;2016/6/5&quot;&gt;&lt;/a&gt;2016/6/5&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;插入命令&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cw -&amp;gt; 替换单词              (删除光标所在单词)
O -&amp;gt; 在当前行之前插入新行
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;/pattern -&amp;gt; 搜索模式
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;复制粘贴命令&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p -&amp;gt; 在当前行位置之后粘贴
p -&amp;gt; 在当前行位置之前粘贴
yy -&amp;gt; 复制当前行
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;undo/redo&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;u -&amp;gt; undo                   (撤销)
&amp;lt;C-r&amp;gt; -&amp;gt; redo               (恢复)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;2016-6-6&quot;&gt;&lt;a href=&quot;#2016-6-6&quot; class=&quot;headerlink&quot; title=&quot;2016/6/6&quot;&gt;&lt;/a&gt;2016/6/6&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;打开/保存/退出&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:e &amp;lt;path/to/file&amp;gt; -&amp;gt; 打开一个文件
:w -&amp;gt; 保存
:saveas &amp;lt;path/to/file&amp;gt; -&amp;gt; 另存为
ZZ -&amp;gt; 保存并退出
:q! -&amp;gt; 退出不保存
vim 支持打开多个文件可用:bn 和 :bp 来切换下一个或上一个文件
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;重复&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;. -&amp;gt; 可以重复上一次的命令
N&amp;lt;command&amp;gt; -&amp;gt; 重复某个命令N次(N为数字)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;光标移动&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:N -&amp;gt; 到第N行
gg -&amp;gt; 到第一行
G -&amp;gt; 到最后一行
按单词移动:
    1. w -&amp;gt; 到下一个单词的开头
    2. e -&amp;gt; 到下一个单词的结尾
&amp;gt; 如果你认为单词是由默认方式，那么就用小写的e和w。默认上来说，一个单词由字母，数字和下划线组成
&amp;gt; 如果你认为单词是由blank字符分隔符，那么你需要使用大写的E和W

其他几个光标的移动
· %: 匹配光标移动，包括(,[,{.  (需要把光标移到括号上)
· #和*: 匹配光标当前所在的单词，移动光标到下一个（或上一个）匹配的单词*(*是下一个，#是上一个)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;2016-6-8&quot;&gt;&lt;a href=&quot;#2016-6-8&quot; class=&quot;headerlink&quot; title=&quot;2016/6/8&quot;&gt;&lt;/a&gt;2016/6/8&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;其他几个光标的移动
· %: 匹配光标移动，包括(,[,{.  (需要把光标移到括号上)
· #和\*: 匹配光标当前所在的单词，移动光标到下一个（或上一个）匹配的单词\*(*是下一个，#是上一个)

12ihello[ESC] 写下12个hello

组合
&amp;lt;start position&amp;gt;&amp;lt;command&amp;gt;&amp;lt;position&amp;gt;
例如
`0y$`
· 0 -&amp;gt; 先到行头
· y -&amp;gt; 从这里开始拷贝
· $ -&amp;gt; 拷贝到本行最后一个字符

`ye`
· 从当前位置拷贝到本单词的最后一个字符

还有一些命令并不一定你就一定要按y才会拷贝，下列命令也会被拷贝：
· d（删除）
· v（可视化的选择）
· gU（变大写）
· gu（变小写）
等

v -&amp;gt; 先按v，然后移动光标，然后，可以d，可以y，也可以变大写
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;sublime-text下使用vim&quot;&gt;&lt;a href=&quot;#sublime-text下使用vim&quot; class=&quot;headerlink&quot; title=&quot;sublime text下使用vim&quot;&gt;&lt;/a&gt;sublime text下使用vim&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://feliving.github.io/Sublime-Text-3-Documentation/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sublime text3 文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在sublime下vim中不能用的命令&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;C-r&amp;gt; -&amp;gt; redo               (恢复)
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2016-6-5&quot;&gt;&lt;a href=&quot;#2016-6-5&quot; class=&quot;headerlink&quot; title=&quot;2016/6/5&quot;&gt;&lt;/a&gt;2016/6/5&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;插入命令&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cw -&amp;gt; 
    
    </summary>
    
      <category term="命令参考手册" scheme="http://mirrornight.github.io/categories/%E5%91%BD%E4%BB%A4%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="vim" scheme="http://mirrornight.github.io/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>我有什么要做</title>
    <link href="http://mirrornight.github.io/2016/06/03/%E6%88%91%E6%9C%89%E4%BB%80%E4%B9%88%E8%A6%81%E5%81%9A%EF%BC%8C%E6%88%91%E9%9C%80%E8%A6%81%E4%BB%80%E4%B9%88/"/>
    <id>http://mirrornight.github.io/2016/06/03/我有什么要做，我需要什么/</id>
    <published>2016-06-03T06:12:01.000Z</published>
    <updated>2016-06-08T10:35:20.518Z</updated>
    
    <content type="html">&lt;h2 id=&quot;搭建一个高效的开发环境&quot;&gt;&lt;a href=&quot;#搭建一个高效的开发环境&quot; class=&quot;headerlink&quot; title=&quot;搭建一个高效的开发环境&quot;&gt;&lt;/a&gt;搭建一个高效的开发环境&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;熟练使用pycharm的各项快捷键，编写python程序&lt;/li&gt;
&lt;li&gt;熟练使用键盘&lt;/li&gt;
&lt;li&gt;熟练vim命令，可用于windows和linux下的开发&lt;/li&gt;
&lt;li&gt;熟练git命令&lt;/li&gt;
&lt;li&gt;熟练window和linux下的各个常用命令&lt;/li&gt;
&lt;li&gt;熟练sublime的快捷键&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;环境配置&quot;&gt;&lt;a href=&quot;#环境配置&quot; class=&quot;headerlink&quot; title=&quot;环境配置&quot;&gt;&lt;/a&gt;环境配置&lt;/h2&gt;&lt;p&gt;安装谷歌插件vimium&lt;br&gt;安装火狐插件Vimperator&lt;br&gt;安装火狐插件Firebug&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;搭建一个高效的开发环境&quot;&gt;&lt;a href=&quot;#搭建一个高效的开发环境&quot; class=&quot;headerlink&quot; title=&quot;搭建一个高效的开发环境&quot;&gt;&lt;/a&gt;搭建一个高效的开发环境&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;熟练使用pycharm的各项快捷键，编写python程序
    
    </summary>
    
      <category term="方向" scheme="http://mirrornight.github.io/categories/%E6%96%B9%E5%90%91/"/>
    
    
  </entry>
  
  <entry>
    <title>python2中编解码问题</title>
    <link href="http://mirrornight.github.io/2016/06/01/python%E7%BC%96%E8%A7%A3%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>http://mirrornight.github.io/2016/06/01/python编解码问题/</id>
    <published>2016-06-01T07:05:02.000Z</published>
    <updated>2016-06-04T06:57:23.346Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;还是没搞懂，待修改&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;字符集是什么？&lt;/strong&gt;&lt;br&gt;字符集（Charset）：是一个系统支持的所有抽象字符的集合。字符是各种文字和符号的总称，包括各国家文字、标点符号、图形符号、数字等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;字符编码是什么？&lt;/strong&gt;&lt;br&gt;字符编码（Character Encoding）：是一套法则，使用该法则能够对自然语言的字符的一个集合（如字母表或音节表），与其他东西的一个集合（如号码或电脉冲）进行配对。即在符号集合与数字系统之间建立对应关系，它是信息处理的一项基本技术。通常人们用符号集合（一般情况下就是文字）来表达信息。而以计算机为基础的信息处理系统则是利用元件（硬件）不同状态的组合来存储和处理信息的。元件不同状态的组合能代表数字系统的数字，因此字符编码就是将符号转换为计算机可以接受的数字系统的数，称为数字代码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用的字符集和字符编码&lt;/strong&gt;&lt;br&gt;常见字符集名称：ASCII字符集、GB2312字符集、BIG5字符集、GB18030字符集、Unicode字符集等。计算机要准确的处理各种字符集文字，需要进行字符编码，以便计算机能够识别和存储各种文字。&lt;/p&gt;
&lt;p&gt;对应字符集的编码（其中重要的）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ASCII编码：将ASCII字符集转换为计算机可以接受的数字系统的数的规则。&lt;/code&gt;使用7位（bits）表示一个字符，共128字符；但是7位编码的字符集只能支持128个字符，为了表示更多的欧洲常用字符对ASCII进行了扩展，ASCII扩展字符集使用8位（bits）表示一个字符，共256字符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Unicode是字符集，UTF-32/ UTF-16/ UTF-8是三种字符编码方案。&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;上述使用4字节的数字来表达每个字母、符号，或者表意文字(ideograph)，每个数字代表唯一的至少在某种语言中使用的符号的编码方案，称为UTF-32。UTF-32又称UCS-4是一种将Unicode字符编码的协定，对每个字符都使用4字节。就空间而言，是非常没有效率的。&lt;/p&gt;
&lt;p&gt;UTF-8（8-bit Unicode Transformation Format）是一种针对Unicode的可变长度字符编码（定长码），也是一种前缀码。它可以用来表示Unicode标准中的任何字符，且其编码中的第一个字节仍与ASCII兼容，这使得原来处理ASCII字符的软件无须或只须做少部份修改，即可继续使用。因此，它逐渐成为电子邮件、网页及其他存储或传送文字的应用中，优先采用的编码。互联网工程工作小组（IETF）要求所有互联网协议都必须支持UTF-8编码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;python中的编码和解码&quot;&gt;&lt;a href=&quot;#python中的编码和解码&quot; class=&quot;headerlink&quot; title=&quot;python中的编码和解码&quot;&gt;&lt;/a&gt;python中的编码和解码&lt;/h2&gt;&lt;p&gt;s.decode() 解码 将s解码为unicode，需要知道s的编码方式&lt;br&gt;s.encode() 编码 s为unicode，需要通过编码与源文件编码一致&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;# -*- coding: utf-8 -*-
a = &amp;quot;中文&amp;quot;             # a 是一个utf-8格式的字符串
b = a.decode(&amp;quot;utf-8&amp;quot;)  # a 是被解码为unicode对象，赋给 b
c = b.encode(&amp;quot;gbk&amp;quot;)    # b 是被编码为gbk格式的字符串，赋给 c
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;此时的c打印出来为乱码，a和b正常&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;# -*- coding: utf-8 -*-
s = &amp;quot;中文&amp;quot;
s.encode(&amp;#39;gbk&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上面的代码回报错，为：UnicodeDecodeError: ‘gb2312’ codec can’t decode bytes in position 4-5…&lt;/p&gt;
&lt;h2 id=&quot;字符编码&quot;&gt;&lt;a href=&quot;#字符编码&quot; class=&quot;headerlink&quot; title=&quot;字符编码&quot;&gt;&lt;/a&gt;字符编码&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;此节内容来自&lt;/strong&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386819196283586a37629844456ca7e5a7faa9b94ee8000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;廖雪峰的官方网站:字符串和编码&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因为计算机只能处理数字，如果要处理文本，就必须先把文本转换为数字才能处理。&lt;br&gt;8bit为1字节，一字节能表示的最大整数为255&lt;br&gt;最先出来的编码表被称之为&lt;code&gt;ASCII&lt;/code&gt;编码，包括大小写英文字母，数字和一些符号，&lt;strong&gt;一个字节就够了&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;但是要处理中文显然一个字节是不够的，&lt;strong&gt;至少需要两个字节&lt;/strong&gt;，而且还不能和ASCII编码冲突，所以，中国制定了&lt;code&gt;GB2312&lt;/code&gt;编码，用来把中文编进去。&lt;/p&gt;
&lt;p&gt;全世界有上百种语言，日本把日文编到&lt;code&gt;Shift_JIS&lt;/code&gt;里，韩国把韩文编到&lt;code&gt;Euc-kr&lt;/code&gt;里，各国有各国的标准，就会不可避免地出现冲突，结果就是，在多语言混合的文本中，显示出来会有乱码。&lt;/p&gt;
&lt;p&gt;因此，&lt;code&gt;Unicode&lt;/code&gt;应运而生。Unicode把所有语言都统一到一套编码里，这样就不会再有乱码问题了。&lt;br&gt;&lt;code&gt;首先’\u‘开头就基本表明是跟unicode编码相关的，“\u”后的16进制字符串是相应汉字的utf-16编码。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ASCII编码和Unicode编码的区别：ASCII编码是1个字节，而Unicode编码通常是2个字节。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;新的问题又出现了：&lt;br&gt;如果统一成Unicode编码，乱码问题从此消失了。但是，如果你写的文本基本上全部是英文的话，用Unicode编码比ASCII编码需要多一倍的存储空间，在存储和传输上就十分不划算。&lt;br&gt;所以，本着节约的精神，又出现了把Unicode编码转化为“可变长编码”的&lt;code&gt;UTF-8&lt;/code&gt;编码。UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字节，&lt;code&gt;常用的英文字母被编码成1个字节，汉字通常是3个字节，只有很生僻的字符才会被编码成4-6个字节。&lt;/code&gt;如果你要传输的文本包含大量英文字符，用UTF-8编码就能节省空间&lt;/p&gt;
&lt;p&gt;从上面的表格还可以发现，UTF-8编码有一个额外的好处，就是ASCII编码实际上可以被看成是UTF-8编码的一部分，所以，大量只支持ASCII编码的历史遗留软件可以在UTF-8编码下继续工作。&lt;/p&gt;
&lt;p&gt;搞清楚了ASCII、Unicode和UTF-8的关系，我们就可以总结一下现在计算机系统通用的字符编码工作方式：&lt;br&gt;在计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码。&lt;br&gt;例：用记事本编辑的时候，从文件读取的UTF-8字符被转换为Unicode字符到内存里，编辑完成后，保存的时候再把Unicode转换为UTF-8保存到文件&lt;br&gt;例：浏览网页的时候，服务器会把动态生成的Unicode内容转换为UTF-8再传输到浏览器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;python的字符串&quot;&gt;&lt;a href=&quot;#python的字符串&quot; class=&quot;headerlink&quot; title=&quot;python的字符串&quot;&gt;&lt;/a&gt;python的字符串&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;此节内容来自&lt;/strong&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386819196283586a37629844456ca7e5a7faa9b94ee8000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;廖雪峰的官方网站:字符串和编码&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;搞清楚了令人头疼的字符编码问题后，我们再来研究Python对Unicode的支持。&lt;/p&gt;
&lt;p&gt;因为Python的诞生比Unicode标准发布的时间还要早，所以最早的Python只支持ASCII编码普通的字符串&lt;code&gt;&amp;#39;ABC&amp;#39;&lt;/code&gt;在Python内部都是ASCII编码的。Python提供了&lt;code&gt;ord()&lt;/code&gt;和&lt;code&gt;chr()&lt;/code&gt;函数，可以把字母和对应的数字相互转换 。&lt;/p&gt;
&lt;p&gt;Python在后来添加了对Unicode的支持，以Unicode表示的字符串用&lt;code&gt;u&amp;#39;...&amp;#39;&lt;/code&gt;表示&lt;br&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; print u&amp;#39;中文&amp;#39;&lt;/code&gt;&lt;br&gt;&lt;code&gt;中文&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; u&amp;#39;中&amp;#39;&lt;/code&gt;&lt;br&gt;&lt;code&gt;u&amp;#39;\u4e2d&amp;#39;&lt;/code&gt;&lt;br&gt;写&lt;code&gt;u&amp;#39;中&amp;#39;&lt;/code&gt;和&lt;code&gt;u&amp;#39;\u4e2d&amp;#39;&lt;/code&gt;是一样的，&lt;code&gt;\u&lt;/code&gt;后面是十六进制的Unicode码。因此，&lt;code&gt;u&amp;#39;A&amp;#39;&lt;/code&gt;和&lt;code&gt;u&amp;#39;\u0041&amp;#39;&lt;/code&gt;也是一样的。&lt;/p&gt;
&lt;p&gt;两种字符串如何相互转换？&lt;br&gt;字符串&lt;code&gt;&amp;#39;xxx&amp;#39;&lt;/code&gt;虽然是ASCII编码，但也可以看成是UTF-8编码，而&lt;code&gt;u&amp;#39;xxx&amp;#39;&lt;/code&gt;则只能是Unicode编码。&lt;/p&gt;
&lt;p&gt;把&lt;code&gt;u&amp;#39;xxx&amp;#39;&lt;/code&gt;转换为UTF-8编码的&lt;code&gt;&amp;#39;xxx&amp;#39;&lt;/code&gt;用&lt;code&gt;encode(&amp;#39;utf-8&amp;#39;)&lt;/code&gt;方法：&lt;br&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; u&amp;#39;ABC&amp;#39;.encode(&amp;#39;utf-8&amp;#39;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;#39;ABC&amp;#39;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; u&amp;#39;中文&amp;#39;.encode(&amp;#39;utf-8&amp;#39;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;#39;\xe4\xb8\xad\xe6\x96\x87&amp;#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;反过来，把UTF-8编码表示的字符串&lt;code&gt;&amp;#39;xxx&amp;#39;&lt;/code&gt;转换为Unicode字符串&lt;code&gt;u&amp;#39;xxx&amp;#39;&lt;/code&gt;用&lt;code&gt;decode(&amp;#39;utf-8&amp;#39;)&lt;/code&gt;方法：&lt;br&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; &amp;#39;abc&amp;#39;.decode(&amp;#39;utf-8&amp;#39;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;u&amp;#39;abc&amp;#39;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; &amp;#39;\xe4\xb8\xad\xe6\x96\x87&amp;#39;.decode(&amp;#39;utf-8&amp;#39;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; print &amp;#39;\xe4\xb8\xad\xe6\x96\x87&amp;#39;.decode(&amp;#39;utf-8&amp;#39;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;中文&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;由于Python源代码也是一个文本文件，所以，当你的源代码中包含中文的时候，在保存源代码时，就需要务必指定保存为UTF-8编码。当Python解释器读取源代码时，为了让它按UTF-8编码读取，我们通常在文件开头写上这两行：&lt;br&gt;&lt;code&gt;#!/usr/bin/env python&lt;/code&gt;&lt;br&gt;&lt;code&gt;# -*- coding: utf-8 -*-&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;相关博客：&lt;br&gt;&lt;a href=&quot;http://liangguanhui.iteye.com/blog/554116&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;五分钟Unicode简单入门&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;字符编码笔记：ASCII，Unicode和UTF-8&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386819196283586a37629844456ca7e5a7faa9b94ee8000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;廖雪峰的官方网站:字符串和编码&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/skynet/archive/2011/05/03/2035105.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;字符集和字符编码（Charset &amp;amp; Encoding）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;个人觉得说得比较清楚其他的一些博客：&lt;br&gt;&lt;a href=&quot;http://www.crifan.com/files/doc/docbook/char_encoding/release/html/char_encoding.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;字符编码详解&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.crifan.com/python_head_meaning_for_usr_bin_python_coding_utf-8/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于Python脚本开头两行的：#!/usr/bin/python和# -&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-的作用 – 指定文件编码类型&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.crifan.com/python_already_got_correct_encoding_string_but_seems_print_messy_code/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python中实际上已经得到了正确的Unicode或某种编码的字符，但是看起来或打印出来却是乱码&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.crifan.com/files/doc/docbook/python_topic_str_encoding/release/html/python_topic_str_encoding.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python专题教程：字符串和字符编码&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;还是没搞懂，待修改&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;字符集是什么？&lt;/strong&gt;&lt;br&gt;字符集（Charset）：是一个系统支持的所有抽象字符的集合。字符是各种文字和符号的总称，包括各国家文字、标点符号、图形符号、数字等。&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://mirrornight.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>git学习笔记</title>
    <link href="http://mirrornight.github.io/2016/05/31/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://mirrornight.github.io/2016/05/31/git学习笔记/</id>
    <published>2016-05-31T07:52:53.000Z</published>
    <updated>2016-06-01T02:34:18.677Z</updated>
    
    <content type="html">&lt;h2 id=&quot;不同颜色的分支所代表的含义&quot;&gt;&lt;a href=&quot;#不同颜色的分支所代表的含义&quot; class=&quot;headerlink&quot; title=&quot;不同颜色的分支所代表的含义&quot;&gt;&lt;/a&gt;不同颜色的分支所代表的含义&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;青色：代表本地储存库和远端储存库是同步状态&lt;/li&gt;
&lt;li&gt;红色：本地储存库的版本比远端储存库落后&lt;br&gt;&lt;code&gt;git pull把远端储存库的变更抓回来更新本地储存库&lt;/code&gt;                  &lt;/li&gt;
&lt;li&gt;黄色：目前本地储存库有些版本超前于远端储存库，而有些落后&lt;br&gt;&lt;code&gt;先 git pull 在 git push 把本地的版本推送上去&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;绿色：代表本地储存库超前于远端储存库&lt;br&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;工作目录档案状态符号与颜色所代表的含义&quot;&gt;&lt;a href=&quot;#工作目录档案状态符号与颜色所代表的含义&quot; class=&quot;headerlink&quot; title=&quot;工作目录档案状态符号与颜色所代表的含义&quot;&gt;&lt;/a&gt;工作目录档案状态符号与颜色所代表的含义&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt; = 有 n 个新增档案&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~&lt;/code&gt; = 有 n 个档案被更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt; = 有 n 个档案被删除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!&lt;/code&gt; = 有 n 个档案在合并时发生冲突&lt;/li&gt;
&lt;li&gt;暗红色：代表这些档案处于untracked 或not staged状态&lt;/li&gt;
&lt;li&gt;暗绿色：代表这些档案处于staged状态&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;git-shell命令&quot;&gt;&lt;a href=&quot;#git-shell命令&quot; class=&quot;headerlink&quot; title=&quot;git shell命令&quot;&gt;&lt;/a&gt;git shell命令&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;usage: git [--version] [--help] [-C &amp;lt;path&amp;gt;] [-c name=value]
           [--exec-path[=&amp;lt;path&amp;gt;]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=&amp;lt;path&amp;gt;] [--work-tree=&amp;lt;path&amp;gt;] [--namespace=&amp;lt;name&amp;gt;]
           &amp;lt;command&amp;gt; [&amp;lt;args&amp;gt;]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

&amp;#39;git help -a&amp;#39; and &amp;#39;git help -g&amp;#39; list available subcommands and some
concept guides. See &amp;#39;git help &amp;lt;command&amp;gt;&amp;#39; or &amp;#39;git help &amp;lt;concept&amp;gt;&amp;#39;
to read about a specific subcommand or concept.
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://blog.miniasp.com/post/2014/01/05/The-color-meaning-in-Git-Shell-prompt.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub for Windows 內建 Git Shell 執行時顏色所代表的意義 &lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      关于git命令和git shell介绍
    
    </summary>
    
      <category term="命令参考手册" scheme="http://mirrornight.github.io/categories/%E5%91%BD%E4%BB%A4%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="git" scheme="http://mirrornight.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>pip命令参考</title>
    <link href="http://mirrornight.github.io/2016/05/30/pip%E5%91%BD%E4%BB%A4%E5%8F%82%E8%80%83/"/>
    <id>http://mirrornight.github.io/2016/05/30/pip命令参考/</id>
    <published>2016-05-30T13:00:28.000Z</published>
    <updated>2016-05-31T09:47:20.795Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;Usage:
  pip &amp;lt;command&amp;gt; [options]

Commands:
  install                     Install packages.
  download                    Download packages.
  uninstall                   Uninstall packages.
  freeze                      Output installed packages in requirements format.
  list                        List installed packages.
  show                        Show information about installed packages.
  search                      Search PyPI for packages.
  wheel                       Build wheels from your requirements.
  hash                        Compute hashes of package archives.
  completion                  A helper command used for command completion
  help                        Show help for commands.

General Options:
  -h, --help                  Show help.
  --isolated                  Run pip in an isolated mode, ignoring
                              environment variables and user configuration.
  -v, --verbose               Give more output. Option is additive, and can be
                              used up to 3 times.
  -V, --version               Show version and exit.
  -q, --quiet                 Give less output.
  --log &amp;lt;path&amp;gt;                Path to a verbose appending log.
  --proxy &amp;lt;proxy&amp;gt;             Specify a proxy in the form
                              [user:passwd@]proxy.server:port.
  --retries &amp;lt;retries&amp;gt;         Maximum number of retries each connection should
                              attempt (default 5 times).
  --timeout &amp;lt;sec&amp;gt;             Set the socket timeout (default 15 seconds).
  --exists-action &amp;lt;action&amp;gt;    Default action when a path already exists:
                              (s)witch, (i)gnore, (w)ipe, (b)ackup.
  --trusted-host &amp;lt;hostname&amp;gt;   Mark this host as trusted, even though it does
                              not have valid or any HTTPS.
  --cert &amp;lt;path&amp;gt;               Path to alternate CA bundle.
  --client-cert &amp;lt;path&amp;gt;        Path to SSL client certificate, a single file
                              containing the private key and the certificate
                              in PEM format.
  --cache-dir &amp;lt;dir&amp;gt;           Store the cache data in &amp;lt;dir&amp;gt;.
  --no-cache-dir              Disable the cache.
  --disable-pip-version-check
                              Don&amp;#39;t periodically check PyPI to determine
                              whether a new version of pip is available for
                              download. Implied with --no-index.
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;Usage:
  pip &amp;lt;command&amp;gt; [options]

Commands:
  install                     Install packages.
  download                    D
    
    </summary>
    
      <category term="命令参考手册" scheme="http://mirrornight.github.io/categories/%E5%91%BD%E4%BB%A4%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="python" scheme="http://mirrornight.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>markdown基础语法学习</title>
    <link href="http://mirrornight.github.io/2016/05/28/markdown/"/>
    <id>http://mirrornight.github.io/2016/05/28/markdown/</id>
    <published>2016-05-28T08:14:56.000Z</published>
    <updated>2016-06-05T00:52:07.568Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;注意：以下内容测试环境为hexo中&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;标题语法&quot;&gt;&lt;a href=&quot;#标题语法&quot; class=&quot;headerlink&quot; title=&quot;标题语法&quot;&gt;&lt;/a&gt;标题语法&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Setext形式
    &amp;quot;=&amp;quot;     (第一阶标题)
    &amp;quot;-&amp;quot;     (第二阶标题)
atx形式
    1~6个&amp;quot;#&amp;quot;，对应标题的1到6阶
    井号后面要有一个空格
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;引用&quot;&gt;&lt;a href=&quot;#引用&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h2&gt;&lt;p&gt;&gt; 内容&lt;/p&gt;
&lt;h2 id=&quot;强调&quot;&gt;&lt;a href=&quot;#强调&quot; class=&quot;headerlink&quot; title=&quot;强调&quot;&gt;&lt;/a&gt;强调&lt;/h2&gt;&lt;p&gt;*内容* == _内容_ == 斜体&lt;br&gt;**内容** == __内容__ == 粗体&lt;/p&gt;
&lt;h2 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h2&gt;&lt;p&gt;无序列表&lt;br&gt;与前一行相隔一行，在写上- 文本&lt;/p&gt;
&lt;p&gt;有序列表&lt;br&gt;与前一行相隔一行，在使用数字加点&lt;/p&gt;
&lt;h2 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;链接&lt;/h2&gt;&lt;p&gt;[描述](链接)&lt;/p&gt;
&lt;h2 id=&quot;图片&quot;&gt;&lt;a href=&quot;#图片&quot; class=&quot;headerlink&quot; title=&quot;图片&quot;&gt;&lt;/a&gt;图片&lt;/h2&gt;&lt;p&gt;![描述](链接)&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;行内代码块&lt;br&gt;`代码`&lt;/li&gt;
&lt;li&gt;代码块&lt;br&gt;双tab+代码&lt;/li&gt;
&lt;li&gt;代码块高亮&lt;br&gt;```&lt;br&gt;代码块&lt;br&gt;```&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;删除线&quot;&gt;&lt;a href=&quot;#删除线&quot; class=&quot;headerlink&quot; title=&quot;删除线&quot;&gt;&lt;/a&gt;删除线&lt;/h2&gt;&lt;p&gt;使用双波浪号表示删除线&lt;br&gt;&lt;code&gt;~~文字~~&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://wowubuntu.com/markdown/basic.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown 语法说明 (简体中文版)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cmd Markdown 简明语法手册&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;注意：以下内容测试环境为hexo中&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;标题语法&quot;&gt;&lt;a href=&quot;#标题语法&quot; class=&quot;headerlink&quot; title=&quot;标题语法&quot;&gt;&lt;/a&gt;标题语法&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Setext形式
   
    
    </summary>
    
    
      <category term="markdown" scheme="http://mirrornight.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://mirrornight.github.io/2016/05/27/hello-world/"/>
    <id>http://mirrornight.github.io/2016/05/27/hello-world/</id>
    <published>2016-05-27T06:35:49.782Z</published>
    <updated>2016-05-27T09:29:41.547Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ hexo new &amp;quot;My New Post&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ hexo server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ hexo generate
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ hexo deploy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
      <category term="fun" scheme="http://mirrornight.github.io/categories/fun/"/>
    
    
      <category term="hehe" scheme="http://mirrornight.github.io/tags/hehe/"/>
    
  </entry>
  
</feed>
